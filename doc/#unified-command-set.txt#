Monitor 
|Receiver
||Transmitter
|||
$   //  syncStrobe: true                 M    
%   //  syncStrobe: false                M    
[   //  message()  { }                   MRT                   
a#: //  acquisitionRate: <integer>       MRT  
bt  //  batteryStatus                    MRT  
ee  //  store                            MRT  
f#  //  firstTagInQueue: <integer>       M    
h   //  deepSleep: true|false            MRT  
mb# //  monitorBattery: true|false         T  
mc# //  countRecords: true|false           T  
md# //  ledOn: true|false                MRT  
mn# //  noiceRecovery: true|false         R   
mn# //  directNetworkAccess: true|false    T  
mp# //  powerSavings: true|false          RT  
mp# //  serialPinOn: true|false            T  
ms# //  doppler: true|false               R   
mx# //  rfidOn: true|false                 T  
p#  //  signalPower: 0|1|2|3              RT  
px# //  signalPower: 0|1|2|3             M    
q#  //  receiverOutputResultQueue        MRT  
r#  //  inputChannel: 1..125             MRT  
s#  //  numTags                          M    
t#  //  outputChannel: 1..125            MRT  
v   //  version: true|false              MRT  
w   //  workRegisters                    MRT  

Example message

message(to: 'R21') {
    serial {                                    // send the query to the serial port
        query(
            batteryStatus: true,
            version: true
        )
    }
    device(
        store: true,
        signalPower: 3,
        doppler: true
    )
    message(to: 'M') {                          // R21 will send this message to all monitors.
        serial('abcde')
    }
}

The text represenation of this message is

R21& <123456> bt v ee p3 ms1 [M<abcde>]{checksum}{carrige-return}



