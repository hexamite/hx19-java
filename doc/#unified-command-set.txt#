Monitor 
|Receiver
||Transmitter
|||
MRT  !    message.to: 'all'
M    $    syncStrobe: true
M    %    syncStrobe: false
MRT  < >  serial
MRT  R#&  message.to: 'R#'
MRT  R&   message.to: 'R'
MRT  [    message()  { }                                        send the message
MRT  a#:  acquisitionRate: <integer>
MRT  b    expandMemoryRefs: true|false                   expand ^# to # chars from memory                                  
MRT  bt   batteryStatus
MRT  ee   store  
M    f#   firstTagInQueue: <integer>
MRT  h    deepSleep: true|false
  T  mb#  monitorBattery: true|false
  T  mc#  countRecords: true|false
MRT  md#  ledOn: true|false
 R   mn#  noiceRecovery: true|false
  T  mn#  directNetworkAccess: true|false
 RT  mp#  powerSavings: true|false
  T  mp#  serialPinOn: true|false
 R   ms#  doppler: true|false
  T  mx#  rfidOn: true|false
  T  n#   
 RT  p#   signalPower: 0|1|2|3
M    px#  signalPower: 0|1|2|3
MRT  q#   receiverOutputResultQueue
MRT  r#   inputChannel: 1..125
M    s#   numTags
MRT  t#   outputChannel: 1..125
MRT  v    version: true|false
MRT  w    workRegisters

Example message

message(to: 'R21') {
    serial {                                    // send the query to the serial port
        query(
            batteryStatus: true,
            version: true
        )
    }
    device(
        store: true,
        signalPower: 3,
        doppler: true
    )
    message(to: 'M') {                          // R21 will send this message to all monitors.
        serial('abcde')
    }
}

The text represenation of this message is

R21& <123456> bt v ee p3 ms1 [M<abcde>]{checksum}{carrige-return}



